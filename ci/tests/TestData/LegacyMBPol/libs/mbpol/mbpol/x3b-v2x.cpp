#ifdef HAVE_CONFIG_H
#   include "config.h"
#endif // HAVE_CONFIG_H

#include <cmath>
#include <cassert>
#include <cstdlib>

#include "x3b-v2x.h"
#include "poly-3b-v2x.h"

////////////////////////////////////////////////////////////////////////////////

namespace {

//----------------------------------------------------------------------------//

double var(const double& k,
           const double& r0,
           const double* a1, const double* a2)
{
    const double dx[3] = {a1[0] - a2[0],
                          a1[1] - a2[1],
                          a1[2] - a2[2]};

    const double dsq = dx[0]*dx[0] + dx[1]*dx[1] + dx[2]*dx[2];
    const double d = std::sqrt(dsq);

    return std::exp(-k*(d - r0));
}

//----------------------------------------------------------------------------//

void g_var(const double& g,
           const double& k,
           const double& r0,
           const double* a1, const double* a2,
                 double* g1,       double* g2)
{
    const double dx[3] = {a1[0] - a2[0],
                          a1[1] - a2[1],
                          a1[2] - a2[2]};

    const double dsq = dx[0]*dx[0] + dx[1]*dx[1] + dx[2]*dx[2];
    const double d = std::sqrt(dsq);

    const double gg = - k*g*std::exp(-k*(d - r0))/d;

    for (int i = 0; i < 3; ++i) {
        g1[i] += gg*dx[i];
        g2[i] -= gg*dx[i];
    }
}

//----------------------------------------------------------------------------//

const double thefit[] = {
-1.743377197070875e+01, // 0
 2.089311656832017e+02, // 1
 1.087427688530270e+02, // 2
-1.283744841245588e+02, // 3
 5.596663854789029e+01, // 4
 1.425941898038279e+01, // 5
 6.128551002039593e+01, // 6
 1.733353924301668e+00, // 7
 9.842973046886841e+01, // 8
-7.117037275194882e+01, // 9
-1.827803643046749e+02, // 10
-1.973360263961605e+02, // 11
-1.281468919584132e+02, // 12
 2.444689615336278e-01, // 13
 4.354289750064604e+00, // 14
-7.471440488451695e+00, // 15
 8.702668612497430e+00, // 16
 4.763609490185287e+01, // 17
 1.143722522296538e+00, // 18
-1.149353943107063e+02, // 19
-8.309578296560531e+00, // 20
 1.700065724784118e+00, // 21
-1.034653523164574e+00, // 22
-9.693920276402674e-01, // 23
 9.585551929246364e+01, // 24
-1.214294676227674e+00, // 25
 1.040853036759069e+02, // 26
 8.139651134259881e+01, // 27
-5.022950429222917e-01, // 28
 8.062976299999429e+00, // 29
-1.053099974111210e+00, // 30
-2.487891615528081e-01, // 31
-3.657812319314182e+00, // 32
 2.799893446283987e+01, // 33
-1.009606561081473e+00, // 34
 1.813850975920025e+00, // 35
-2.605903397841693e+00, // 36
 9.996355874102957e+00, // 37
-8.208497585239612e-01, // 38
-6.016177469157579e+01, // 39
-8.970942083101251e+01, // 40
-1.611245164498255e-01, // 41
 1.628202777237015e+01, // 42
 5.884927653121586e-01, // 43
 1.189806746324836e+02, // 44
 1.924383296233176e+00, // 45
 4.241577037344579e+00, // 46
-1.412059381528348e+00, // 47
 1.374513183815514e+01, // 48
-6.880224507175423e+01, // 49
-2.555833934325997e-01, // 50
 1.624855431045398e+00, // 51
 1.021233380854902e+00, // 52
-7.225055866489238e+00, // 53
 1.025511607201054e+01, // 54
-1.888277844494636e+01, // 55
 4.593074666320076e+00, // 56
-5.020535640898480e-01, // 57
 3.911657419453151e+00, // 58
 3.309293152875913e+00, // 59
-4.212666617897496e+00, // 60
 2.111363711389890e+02, // 61
 8.722691691408075e-01, // 62
-2.180349351286207e-01, // 63
 1.175361536237898e+00, // 64
 5.860290998567241e-01, // 65
 1.739248188249690e+00, // 66
-2.000282438634904e+00, // 67
-2.353346492574213e+00, // 68
 9.625774535491269e-01, // 69
 1.786328361452429e+01, // 70
 4.033627053505576e+00, // 71
 1.213684530735588e+00, // 72
-4.894153319027960e+02, // 73
 1.642473440431330e-01, // 74
-4.259120564359865e-01, // 75
-1.552539473740763e+01, // 76
-8.582145395207064e+00, // 77
 2.277734026050378e-01, // 78
-8.274747107221707e+01, // 79
-3.783245965514562e+01, // 80
-1.754860655719373e+01, // 81
-2.738284011783712e-01, // 82
 8.978535369767620e+00, // 83
 7.501036072934211e-01, // 84
-1.622203588189491e-01, // 85
-1.392945517822096e+00, // 86
-1.805402577227933e+02, // 87
 1.103802095398265e+02, // 88
-2.726417014726193e-01, // 89
-5.308218786107749e+00, // 90
 1.056609493913411e+01, // 91
-1.632643730369313e+00, // 92
 2.759259255482202e+00, // 93
 2.665573305059726e+01, // 94
-6.763562138326729e+00, // 95
 7.770223029272005e+01, // 96
 1.918304286356732e-01, // 97
 5.144261823225600e+01, // 98
 3.455320702797132e-01, // 99
-1.771538604656494e+02, // 100
 6.957869909215631e+00, // 101
 5.507495837585845e+01, // 102
-3.974962519646235e+01, // 103
 6.344088131985568e+01, // 104
 2.716534685106605e-01, // 105
-7.489631238230149e+01, // 106
-2.751521953248500e+00, // 107
-7.547568696931751e+00, // 108
-1.622664362078711e+01, // 109
-8.361068914663519e-02, // 110
-7.089665528236211e-01, // 111
 5.852440236016893e+01, // 112
 4.663639216071220e+00, // 113
-1.229128124490421e+02, // 114
-2.047419976100477e+00, // 115
-5.117518065513930e+01, // 116
-6.019542387638406e-01, // 117
-7.723968230177208e+01, // 118
-7.074762171814234e-01, // 119
 1.498675041530755e+00, // 120
-4.597214344314243e-01, // 121
-1.023254862613206e+01, // 122
 1.533178274577317e+02, // 123
 6.728007298180304e-01, // 124
 1.627924691074581e-01, // 125
 1.937496501700873e+00, // 126
-5.408821221773594e+00, // 127
 1.188324360107360e+00, // 128
-2.194597223722268e+00, // 129
 1.237397244554251e+01, // 130
 1.598093187154409e+00, // 131
 1.117853473906935e+01, // 132
-3.178560856626202e+01, // 133
-1.524299543930228e+00, // 134
-1.423591003012400e+02, // 135
 7.504916486777256e-02, // 136
-2.330697890022995e+01, // 137
-8.918972894948419e+00, // 138
 1.804507106085390e+01, // 139
-9.378661800435363e+00, // 140
-9.666748415802519e+01, // 141
-2.184496632530373e+01, // 142
-9.518611876180785e-02, // 143
 3.087619187794188e-01, // 144
 4.205222987348804e+01, // 145
-1.181836421818782e+01, // 146
-2.330863522818624e-01, // 147
 2.514640480512810e+00, // 148
-1.793719655794914e+00, // 149
 1.516680267783703e+00, // 150
 5.438385280777460e-01, // 151
 3.083347838490701e+01, // 152
-1.005935449699854e+01, // 153
 2.286593561720426e+00, // 154
-9.492326286252402e-02, // 155
 1.476734389010896e+01, // 156
-9.215976204155556e+00, // 157
 4.869535401832681e+00, // 158
 1.133759192615345e+02, // 159
-2.148775640188943e-01, // 160
-1.401240995101314e+00, // 161
-5.110719104228154e-01, // 162
-1.844633416702736e+01, // 163
 3.110265286460514e+01, // 164
 6.410752443393297e+00, // 165
 7.157049016545996e+00, // 166
-3.290989399400059e+01, // 167
 3.844318083078153e+01, // 168
-8.565693991469944e+01, // 169
-1.218331075963810e+00, // 170
 3.351058551940511e+01, // 171
 1.702521052319496e+00, // 172
 1.381096971763033e-01, // 173
 2.289922338771239e+01, // 174
 1.140845970568720e+02, // 175
 1.587910776958094e+01, // 176
-9.216091068658055e-01, // 177
 2.436637371459236e-01, // 178
-8.495103010308276e-01, // 179
 9.096836526492669e+01, // 180
-4.681735162108578e-01, // 181
-5.555999390424734e+01, // 182
-3.712073186549133e+00, // 183
 3.888426592077457e-01, // 184
-2.544550362621610e+00, // 185
 5.311489677093989e+01, // 186
 7.904842328391773e+00, // 187
-6.875100798647009e+00, // 188
 3.858331726786371e-01, // 189
-1.233196819260199e+00, // 190
-6.002276278336611e+01, // 191
-1.592142895475853e+01, // 192
 3.813572287643656e+00, // 193
 4.634191164566599e+01, // 194
-2.691627606735205e+00, // 195
-2.131261435882293e+02, // 196
-3.266953579417035e+01, // 197
 1.120910660307600e+02, // 198
 3.420474570245723e+01, // 199
-1.537366223528300e+02, // 200
 6.717025915608451e+02, // 201
-3.631391855144807e+00, // 202
 2.685994516074155e-02, // 203
 6.265485710883192e+01, // 204
-5.549446123382322e-01, // 205
 2.960852462194497e+01, // 206
-1.994147706914930e+02, // 207
-4.081751339352151e+00, // 208
-6.792584631165363e+00, // 209
 7.489409509162790e+01, // 210
-2.087848174416133e+01, // 211
 8.296606397759871e+01, // 212
-5.902918469889365e+01, // 213
 3.571721823934464e+02, // 214
 5.133308008900522e-02, // 215
 2.652683352745167e-05, // 216
 2.658937930018420e-02, // 217
 7.803934567375077e-01, // 218
 1.030787393334626e-03, // 219
-8.877679379611735e-01, // 220
 3.417621959305811e+00, // 221
-2.094175527340597e-02, // 222
 3.534616198082318e-03, // 223
 4.786554967010400e+01, // 224
 4.820613600935067e-03, // 225
-3.245629700342000e-03, // 226
 1.052503498989095e-01, // 227
-3.489374200116073e-03, // 228
 2.222768234151123e-03, // 229
-1.263323219129145e-01, // 230
 3.800192224012195e-02, // 231
 3.952537557377575e-03, // 232
-1.568397252618155e+00, // 233
-5.771159451779162e-02, // 234
 8.478306299942848e-03, // 235
-7.455492746090956e-01, // 236
 4.002781274380017e+00, // 237
-3.109263652067190e+01, // 238
 3.361319492849633e-03, // 239
-2.211380268688152e-01, // 240
-5.544091119169866e-03, // 241
-1.483964894128340e-02, // 242
 3.670900331497255e-01, // 243
 5.814514725417180e+00, // 244
-1.087131320262548e-02, // 245
-7.442650883455812e-01, // 246
-1.874393762930955e+00, // 247
 3.937782459389709e-02, // 248
-2.710015362132304e+00, // 249
-8.852923558718409e-02, // 250
 5.293147849321845e-03, // 251
 3.682965280596182e-04, // 252
-1.202527297899182e-03, // 253
-1.796601299015969e+01, // 254
-7.794467876039174e+00, // 255
 8.786940546828319e-03, // 256
-1.816743903665622e-01, // 257
-8.964665837603922e-04, // 258
 1.418860643845550e-03, // 259
-3.569599278632730e-01, // 260
-3.001229701019655e-02, // 261
 1.811323137424351e-01, // 262
-5.941404748293290e-01, // 263
-5.638896698244495e-04, // 264
 1.997978167028790e-03, // 265
 5.226467459964887e+00, // 266
-1.041965640072034e-01, // 267
-3.784831437555939e-03, // 268
-3.082116716276968e-04, // 269
-3.340452023283473e+00, // 270
-4.670434048726762e-03, // 271
-4.792362970578469e-02, // 272
-9.789729926703561e-02, // 273
 2.660907842390989e-02, // 274
-4.544672382159782e-03, // 275
-4.187866866613026e-02, // 276
 6.000317739769601e+00, // 277
-7.011983101446932e-03, // 278
-1.151536157362954e-01, // 279
 2.539175076471459e+00, // 280
-1.772399318222060e-01, // 281
-4.135217103652104e-05, // 282
-8.136220484902113e-03, // 283
 7.412063114815547e+00, // 284
-2.724932563478752e-02, // 285
 2.396626453666635e-04, // 286
 6.230531421384776e+00, // 287
 1.017909591193059e-02, // 288
-6.140005771856310e-02, // 289
 7.870075825570919e-02, // 290
 1.192494205191334e-01, // 291
 6.791992601576138e-01, // 292
 6.786341914153099e-01, // 293
 2.011075985388900e+00, // 294
 2.290936615229433e+00, // 295
-1.538671670559566e+00, // 296
 3.083760567400105e-02, // 297
 1.427483183010443e-02, // 298
-1.940867175466954e-02, // 299
 1.014554460505766e-03, // 300
-8.494847115733275e-04, // 301
-7.329606246554069e-01, // 302
 1.699700070265220e-01, // 303
 1.270273376355035e-02, // 304
-4.342285042961053e-02, // 305
-1.060296835226691e-02, // 306
-1.674179446100242e-03, // 307
 2.500049694767205e+00, // 308
 7.649201555727974e-03, // 309
-1.380134001071024e-02, // 310
-2.922101180993474e+01, // 311
 5.170890241043023e-02, // 312
 8.734843636833807e-02, // 313
 5.445931047237135e-01, // 314
-8.165940276007126e-02, // 315
-1.746065801250673e-03, // 316
 6.186355796118587e-02, // 317
 1.182365730507747e-02, // 318
-5.776285537210974e-01, // 319
-5.814111876501702e-02, // 320
-7.882727525716804e-01, // 321
 5.001015931849398e-04, // 322
 5.864147754089364e-03, // 323
-1.220743485255082e-01, // 324
-7.677349014631721e+00, // 325
 1.588335912720998e-03, // 326
 3.506720033509213e+00, // 327
 1.058307270417112e-03, // 328
 2.444421810034157e-02, // 329
 2.623700351184917e-01, // 330
 3.083994322414911e-02, // 331
 5.133850835015739e-02, // 332
-1.830337347855642e-01, // 333
 1.118634814170023e-01, // 334
 2.799308565625013e-02, // 335
 3.272749995799451e+00, // 336
-3.122892533859183e-02, // 337
-3.905226497032339e-02, // 338
-1.323430911089954e-01, // 339
 2.116948135761228e+01, // 340
 2.064432791420956e-04, // 341
 1.615194078901324e-03, // 342
 1.980388999870532e-02, // 343
 3.915916313713674e+00, // 344
 8.645198282120942e+00, // 345
-2.330381496249324e-03, // 346
-1.100777810480990e+00, // 347
-2.442687615262339e-03, // 348
 1.177395950260341e-01, // 349
 1.147093336154691e+02, // 350
-1.247067650501886e+01, // 351
-9.996354171490145e-02, // 352
 1.540526927769556e-02, // 353
 1.753936220321124e-03, // 354
-2.228050394870721e-01, // 355
 1.076752645549304e-02, // 356
 4.558553728073014e-01, // 357
-3.361824809096642e-03, // 358
-1.436049088139224e+00, // 359
-5.403962563150141e-01, // 360
-3.324632003716473e-03, // 361
 1.027271059721645e-02, // 362
-1.753424146111465e+00, // 363
-1.470422070666924e-01, // 364
 3.061178846735091e-03, // 365
-2.992273340941334e-02, // 366
 1.387333984712209e+00, // 367
 2.382775366468545e-01, // 368
 3.838964570755236e-02, // 369
 1.872905840854447e+00, // 370
 9.578112070082479e-03, // 371
-2.216238681424270e-02, // 372
-2.259718963559710e-01, // 373
-3.068848754970457e-03, // 374
 2.635681007592174e-02, // 375
-4.189303187664893e-01, // 376
 1.725885993656271e+01, // 377
-1.491288459411886e+00, // 378
-1.741991302762992e-01, // 379
 1.932624985606446e-02, // 380
-6.074744411934375e-01, // 381
-1.031140893164147e-02, // 382
 1.242504493553741e-02, // 383
-1.073293953720950e-02, // 384
 1.171224934496619e+01, // 385
-3.464804988310392e-02, // 386
-4.675478793836237e-01, // 387
 1.295843762238342e-02, // 388
 5.803361581696150e-01, // 389
 2.692140638327853e+00, // 390
-4.490855474267638e-03, // 391
-1.261442253472564e+00, // 392
 2.372334900375904e-01, // 393
-2.737640152377385e-03, // 394
-8.562845489266363e-03, // 395
-3.524996572246576e-01, // 396
 2.954679197970651e+01, // 397
-3.267975128991715e-02, // 398
 3.945050585833640e-01, // 399
-1.191711402734527e-02, // 400
 2.131911262962211e-01, // 401
 3.102755114200252e-01, // 402
 5.461772089151813e-03, // 403
-3.043522074702151e-01, // 404
 2.779219825368406e+01, // 405
-8.185349073159251e-02, // 406
 2.142448767808915e+01, // 407
-4.242337681788379e-02, // 408
-5.339370405815078e-01, // 409
 3.190752878438325e+00, // 410
 4.096013889597520e-03, // 411
 7.254892108753187e-01, // 412
 2.483532940171792e+00, // 413
 1.492880565693585e+00, // 414
 2.930360460142368e+01, // 415
 5.251933434131837e-02, // 416
 2.603131314816191e-04, // 417
 4.614718854777198e-02, // 418
 5.441088453290240e-01, // 419
-6.998066213259395e-03, // 420
 1.053367896988218e-01, // 421
 6.472039246652898e-01, // 422
 3.514058493346884e-01, // 423
-5.414497445255300e+00, // 424
 5.204023490229749e+00, // 425
-1.136688076087783e-02, // 426
-9.852900954586924e-02, // 427
-7.422752439330707e-03, // 428
 1.170080796162793e+01, // 429
-5.076724312271764e+00, // 430
 3.608445694453787e-01, // 431
 5.250138165633719e-01, // 432
 9.906539038667259e-01, // 433
-9.403300114534250e-01, // 434
-8.026069602486638e+00, // 435
-2.033567177207880e-02, // 436
-3.245292926312459e-03, // 437
-1.597249677394883e+00, // 438
 2.824398121935303e-03, // 439
-2.800824939933018e+01, // 440
-1.995579057024330e-02, // 441
-2.239762477186968e-01, // 442
-5.138408222039806e-02, // 443
 8.639210037593706e-03, // 444
-7.862182381694267e-03, // 445
 3.930116569514527e-01, // 446
 2.458184119806207e-03, // 447
-9.871156708689190e-03, // 448
-2.434963899607852e-03, // 449
-1.055039938909338e+01, // 450
-1.376430126899212e-02, // 451
 4.198803950246857e-02, // 452
-5.278740054820918e+00, // 453
 7.382212172403865e-02, // 454
-3.272383941148044e-02, // 455
-2.408616518614535e-03, // 456
 6.487611086177364e-01, // 457
-1.568850333250843e-01, // 458
-1.173774216216808e-01, // 459
 9.306973833838490e-02, // 460
-4.894389086815477e-02, // 461
 1.010183913324022e-03, // 462
-2.133311812677051e-02, // 463
-2.337006216735706e-01, // 464
-6.478598799152459e-02, // 465
-2.477659010982667e+00, // 466
 1.839465075061955e-03, // 467
 6.593121023740296e-02, // 468
-1.246951075688066e+01, // 469
-1.245506131817022e-02, // 470
-6.957111273886731e-02, // 471
-2.565408863964179e+00, // 472
 5.050970371224974e-01, // 473
-7.796049634300577e-04, // 474
 4.758547237319551e-03, // 475
 3.678529004111872e-01, // 476
-2.980048781677960e+00, // 477
 2.564492608403556e-03, // 478
-4.220261467995212e+00, // 479
-5.151499214072393e-01, // 480
 7.120432073153814e-02, // 481
-9.919656143675991e-01, // 482
 1.434924245542416e-01, // 483
-3.606450193859170e-02, // 484
-1.954911820289601e+00, // 485
-5.229355429352110e-02, // 486
-9.811915727558745e-02, // 487
 6.388621339666997e+00, // 488
 4.715816591793746e-02, // 489
 9.675036529459025e+00, // 490
 4.220551889136098e-04, // 491
-1.323843184933878e-01, // 492
-2.676871969702662e+00, // 493
-1.578320497293936e-01, // 494
 2.089656381992425e-02, // 495
-9.011018320367931e+00, // 496
-2.822173666228803e-03, // 497
 8.329472372221387e-03, // 498
-8.622570084673084e+00, // 499
-1.178173085170413e-01, // 500
 1.530351227874766e-01, // 501
 4.999235962131203e-03, // 502
 2.877156890760036e+01, // 503
 5.342330652371230e+01, // 504
 6.922781462817021e-01, // 505
 2.836172131801216e+00, // 506
 6.106930872017315e-01, // 507
-1.233163881941533e-02, // 508
 3.991446191708811e-01, // 509
-1.153836574793918e-01, // 510
 2.314094017836076e-02, // 511
 1.505646321058291e-03, // 512
-7.205109782620691e-01, // 513
-1.020719208597748e-02, // 514
-1.805638021149984e-02, // 515
-5.085968382226197e-03, // 516
 9.465616497804612e-01, // 517
-1.509595675584939e-02, // 518
-7.454126029967189e-01, // 519
 7.117572419660592e-01, // 520
 2.126148344998907e-01, // 521
-3.466094278451300e-01, // 522
 6.763117623087330e-01, // 523
 4.045318154885927e-02, // 524
-6.660456107052027e+00, // 525
 1.141076099981283e-01, // 526
-3.394494545401501e-02, // 527
 3.430764991061228e-03, // 528
 6.147317688153234e+00, // 529
-1.959151292800480e-01, // 530
 3.903797453021848e-03, // 531
 3.777917015737976e-02, // 532
-8.407131955118456e-02, // 533
-1.215831441781701e-02, // 534
-2.767387985298763e+01, // 535
-8.555521382702604e-03, // 536
 3.822214585974535e-02, // 537
 3.211411772086818e-01, // 538
-6.639988589477107e-02, // 539
-2.283233361517897e+01, // 540
 2.690293939693652e+01, // 541
-5.715741806709360e-02, // 542
 6.472587781136225e-01, // 543
-1.256672716168632e-01, // 544
-2.598924527031452e+00, // 545
 4.074318339169676e-02, // 546
-6.976572885161410e+00, // 547
-1.580355926374533e-03, // 548
-2.502435285833398e-02, // 549
 3.084655568362317e-02, // 550
-7.798843391754906e-01, // 551
-7.420289795220082e-02, // 552
 6.198829320447029e-03, // 553
 1.045238896404645e-02, // 554
 7.910505661305669e-01, // 555
-4.940853399531326e-03, // 556
-1.726161853888303e+00, // 557
-2.312034181317032e+01, // 558
 1.283724655040418e-02, // 559
-2.857546338955981e+00, // 560
 1.524326868335806e+00, // 561
 1.327727541581163e-01, // 562
 3.291614550728984e-02, // 563
 3.655931810871264e-04, // 564
-1.200935233490773e+00, // 565
-1.006965255819922e-01, // 566
 8.118126323017096e-01, // 567
-3.232013258446483e-02, // 568
-3.891410839595651e-03, // 569
-2.233559770890816e-02, // 570
 7.826296683004475e+00, // 571
 9.173011081219975e-03, // 572
 1.884163780612995e-02, // 573
-1.867974581656789e+00, // 574
 4.984187970486471e-02, // 575
-1.077261606189206e-01, // 576
-1.115959076639258e-02, // 577
-2.817972632405085e-02, // 578
 4.701799444926386e-02, // 579
 5.707988534023126e-02, // 580
 1.400845473815132e+01, // 581
 2.817080102461249e-01, // 582
 5.214090713075231e-02, // 583
-6.596212913513438e-01, // 584
-4.373481912806742e-01, // 585
-8.977807909408600e-03, // 586
 4.850548670252803e+01, // 587
-3.813292397922340e-02, // 588
-5.041556914822190e+01, // 589
-3.010651490667366e-01, // 590
 9.708146414864689e-03, // 591
 7.836736994216005e-03, // 592
 5.857304566092262e-02, // 593
-3.473695975246328e+00, // 594
 2.088814612295500e-01, // 595
-3.212227827690294e+00, // 596
-4.257134639891898e+00, // 597
 3.967332222181145e-03, // 598
 3.947103632020374e-03, // 599
-1.100517121053015e-02, // 600
-3.537054679987686e+01, // 601
 2.377793535673771e-03, // 602
 9.807391782288910e-01, // 603
 5.162175770857211e-01, // 604
-1.410545054269260e+01, // 605
-2.681517725414551e-04, // 606
 1.761358656394800e-01, // 607
 3.323260119251726e-01, // 608
 9.404277917596650e-01, // 609
 9.888645202252144e-03, // 610
 1.958970105992761e+00, // 611
 8.519681969762151e-02, // 612
-1.089716769475379e-03, // 613
 8.376871688076229e-03, // 614
-7.693079577131897e-04, // 615
-1.017676357823405e+00, // 616
-5.652509235744939e-02, // 617
-9.093176442590183e-03, // 618
-6.351255165854130e-03, // 619
-1.327950788751545e+01, // 620
 1.840323610639356e-02, // 621
 2.731474855608204e+01, // 622
-1.924015266991842e+01, // 623
-3.222957239756754e-03, // 624
 2.209357139990350e-03, // 625
-8.812577598679345e+00, // 626
-9.519926289947279e-04, // 627
 9.027369085848162e-03, // 628
 7.860417928149238e-03, // 629
 1.310746466261008e-01, // 630
-1.175109818844566e-01, // 631
 2.212847418181007e+00, // 632
 6.831671390711499e-03, // 633
-4.091709846290400e-04, // 634
-6.024137602958523e-04, // 635
 3.882131876763623e+00, // 636
-4.575114058590114e-03, // 637
 7.565346711945239e-02, // 638
-2.806361707359176e-03, // 639
 1.798733038615828e+02, // 640
-8.033243290778775e-03, // 641
 6.849990082142975e-02, // 642
-7.825306986981775e-04, // 643
-4.787731411551997e-04, // 644
-1.401657952099281e-02, // 645
-4.665963382345655e-03, // 646
 4.094691187239955e-03, // 647
 2.896215142785552e+00, // 648
-2.661225691643502e-03, // 649
 8.020004385896143e-02, // 650
-1.345064420161292e+00, // 651
-1.038496518748241e+01, // 652
-4.794078586038616e+00, // 653
 1.431377766044731e-03, // 654
-3.406479589013402e-02, // 655
-3.993748041541398e-01, // 656
 1.478207045618181e+00, // 657
-6.750470330234515e-02, // 658
 4.345810570187554e-01, // 659
-5.171661510743115e+00, // 660
 8.435597057784796e-04, // 661
 2.002426354440091e-02, // 662
-1.060277917589278e+00, // 663
 5.931174587599368e+00, // 664
 5.808997718573138e-01, // 665
 1.216430982834748e+01, // 666
-4.339581330308650e-03, // 667
 4.462373496876091e+00, // 668
-4.014243475772505e-04, // 669
 5.341849274623510e+01, // 670
-2.830842131323120e-03, // 671
 4.988572007128142e+00, // 672
 1.906612488897250e-02, // 673
 1.045316930674116e+00, // 674
 7.495302800086721e-03, // 675
-3.671033826409527e+01, // 676
 3.047525519436016e-03, // 677
 2.028516903925590e+00, // 678
 3.051901174799468e-03, // 679
 4.204806931915363e+00, // 680
-9.775842722224158e-02, // 681
 1.303247671491178e-02, // 682
-9.048222874572991e+00, // 683
 1.866835641187513e-02, // 684
-2.535765908557723e-02, // 685
 2.637239587255297e-02, // 686
 7.637047914252713e-02, // 687
 9.373261101544150e-02, // 688
 2.517208681195202e-03, // 689
-2.105937972156083e-02, // 690
-5.440093592559280e+00, // 691
 6.199097081147550e-03, // 692
 1.849790565631803e-02, // 693
-4.935676951245974e-03, // 694
 6.959726360520742e-02, // 695
 7.679030383531246e-03, // 696
 1.343035008838794e-01, // 697
 4.484365945508977e-01, // 698
-1.420122772333366e-01, // 699
 5.418760767328135e-01, // 700
-2.300146657072991e-03, // 701
 8.453074050515565e-02, // 702
-4.604766262137260e-02, // 703
-1.929300797787945e-03, // 704
-1.716962823579036e-02, // 705
-2.368102778786970e-01, // 706
 2.083914509428654e+00, // 707
-3.681575212322585e-03, // 708
-2.649356087520623e+01, // 709
 2.647256296705505e-02, // 710
 1.722942773058193e-01, // 711
 3.361447832909950e+01, // 712
-3.754510596663498e-01, // 713
-1.365148521879600e-02, // 714
 3.357339649396429e-03, // 715
 6.490299427278759e-02, // 716
 3.028577777810502e-02, // 717
 1.006847396526122e+01, // 718
-4.960384665446082e-03, // 719
 6.236025745127597e-02, // 720
-3.956758231078534e-01, // 721
 1.632374428291740e-01, // 722
 8.958656563724056e-03, // 723
-2.573176382593476e-01, // 724
 1.650227403357042e-02, // 725
-5.422207681925119e-01, // 726
-2.688662615545741e+01, // 727
-6.732219649424038e+00, // 728
-4.888382044656479e-03, // 729
-8.979258319883472e-02, // 730
 2.293368633692119e-02, // 731
-9.733527239545255e-02, // 732
-1.329895297705294e-01, // 733
-4.347795458688237e-01, // 734
 3.881137928220593e-02, // 735
 9.790613423573052e-02, // 736
 1.489239684808634e+01, // 737
 2.513997310785505e-02, // 738
 7.545275403702525e+00, // 739
-1.234555744679412e+01, // 740
 6.405382520619830e-01, // 741
-1.059985343080912e-03, // 742
 1.521547271221699e-03, // 743
-3.521558727233768e-02, // 744
-2.574850731385575e-03, // 745
-2.188945120374154e-02, // 746
-1.183281920929490e-02, // 747
 1.321103449437879e-02, // 748
 1.119549393135453e-02, // 749
-1.315516080469739e-02, // 750
 1.152722741879299e+00, // 751
 1.514279381913393e+01, // 752
 2.398412036082303e-03, // 753
 1.388443458372435e+00, // 754
-7.173305804978180e-04, // 755
 3.853140111182515e+01, // 756
 9.112583048442952e-03, // 757
-1.673438931064463e+00, // 758
 2.049768621321127e+00, // 759
-2.150412724634079e-02, // 760
 1.798846043318953e-02, // 761
 4.220630282627276e-04, // 762
 1.581856927759950e+00, // 763
 7.758246224703978e-04, // 764
 1.265536356577537e-01, // 765
-8.072481031284290e-02, // 766
-5.599993681464030e+00, // 767
 1.168102215848586e-02, // 768
-8.144722584333304e-02, // 769
 7.187594523813430e-03, // 770
-2.120194950315693e-01, // 771
 5.407226808300454e-02, // 772
-4.173507004128416e-02, // 773
 5.984142015249169e-02, // 774
 7.734259464893621e-02, // 775
 2.164514879072918e-01, // 776
 2.252993766411560e-02, // 777
-7.058038526961187e-03, // 778
 1.798399527161585e-01, // 779
-2.319899533015398e-01, // 780
 5.764528577810427e+00, // 781
 1.348424904550029e-02, // 782
-2.255684483941352e-01, // 783
 9.456653729492192e-01, // 784
-3.704288382997454e-01, // 785
 2.853202261161585e-02, // 786
 8.487251574313388e-02, // 787
-3.678866329465130e-02, // 788
 7.661409589415701e-02, // 789
-1.673553926511387e+01, // 790
 6.587331439080983e-03, // 791
-6.293696166967822e-03, // 792
-4.785247798817847e-02, // 793
 4.507137819516456e-03, // 794
-6.566791418424229e+00, // 795
-3.267003993972608e-01, // 796
 2.916174608614152e-01, // 797
 4.984939939057065e-03, // 798
-1.951792672951769e+01, // 799
 2.855688637173954e+00, // 800
-4.645694915123265e-03, // 801
 3.035352054049378e-03, // 802
 1.387740832659653e+01, // 803
-1.908615424825165e+01, // 804
-1.633775031521418e-03, // 805
-1.999146378124180e-01, // 806
 4.778643858787871e-02, // 807
-4.773509787004335e-02, // 808
-4.441711535242246e-04, // 809
 1.062517548243530e-03, // 810
 3.467682399459772e-03, // 811
 7.362771310477806e-03, // 812
-5.854575535933750e-01, // 813
-1.166202840072294e-03, // 814
-5.701033673929770e+01, // 815
 6.713855780462873e-01, // 816
 6.625515754382792e+00, // 817
-3.582639611136673e-04, // 818
 1.239685021437553e+00, // 819
-6.066102035794940e-03, // 820
-7.965380529100143e-02, // 821
 2.072436035702553e-01, // 822
 4.946996215149450e-01, // 823
-2.428472245678764e-02, // 824
 1.137372340508237e+00, // 825
-7.617899388715470e-03, // 826
 3.614305506956612e-03, // 827
 5.439885650745738e-03, // 828
 1.568906093579821e-02, // 829
 6.636895524777094e-03, // 830
 1.332534508556042e-01, // 831
 2.213574855260841e-03, // 832
 9.767322560601809e+00, // 833
 6.901590017438478e+00, // 834
-7.396925662950836e-01, // 835
-2.896844649229837e-03, // 836
 3.510477854567302e+00, // 837
 3.211070712140820e-02, // 838
 2.164748713107003e-01, // 839
 4.761173033123066e-02, // 840
 1.648691568990321e-01, // 841
 2.128359054432749e-02, // 842
 1.128791181893081e-03, // 843
 1.049171537863386e+00, // 844
-5.950166952403805e+00, // 845
-1.729696796822725e+00, // 846
-6.380502392298867e-03, // 847
-8.929102763744902e-02, // 848
 2.218499336989645e+01, // 849
-3.569365188024445e-01, // 850
-1.024207746249313e+01, // 851
-9.080838509909751e-03, // 852
 5.031992390277869e-05, // 853
-7.775843145060116e+00, // 854
-1.906367034052984e-02, // 855
 1.780910014381157e-03, // 856
-2.016007968722374e-02, // 857
 4.195866563067419e-01, // 858
-3.205499329815369e+00, // 859
-9.184449750327668e-01, // 860
-1.633702537003058e-02, // 861
-1.305552681687948e+00, // 862
 1.936734185549517e-01, // 863
 2.604540285747533e-02, // 864
-1.110304877532001e-02, // 865
 1.265759070603906e+00, // 866
-1.900005461687467e+00, // 867
-9.137371883140869e-01, // 868
 2.226772579293139e-03, // 869
 6.672570561367534e-04, // 870
 4.678511293967459e-02, // 871
 5.465283080000596e+00, // 872
-3.316984117739912e-03, // 873
-4.183547025600476e-01, // 874
-6.517468466879650e-03, // 875
 8.053667510458484e-02, // 876
 9.802292489281403e-02, // 877
-3.784855703097363e-02, // 878
-1.598657131227242e-02, // 879
 3.279857083429691e-01, // 880
-3.027650019182427e-02, // 881
-2.128875862421499e-03, // 882
-4.901746025664045e-03, // 883
-1.176693587807662e+00, // 884
 3.212581186484663e+01, // 885
 5.642684857412561e+00, // 886
-6.886051575914921e-03, // 887
-4.308676881333719e-03, // 888
 6.961482182284355e+01, // 889
 1.131837273318742e-01, // 890
-1.382406509265952e+00, // 891
-4.772293348627419e-03, // 892
-5.291127059189860e-02, // 893
-2.747108479694347e-03, // 894
 3.923813986599176e+00, // 895
-3.283290719855846e-02, // 896
-2.271295503774833e-03, // 897
 8.194813479275672e-03, // 898
-3.107610223944947e-01, // 899
 1.438173141372485e-01, // 900
-1.533181754590502e-02, // 901
 1.174614106094642e+00, // 902
 9.750839053317847e-02, // 903
 3.488941404374235e-01, // 904
 2.470561624441177e-03, // 905
-1.984853758605432e-02, // 906
 7.864397355903738e-01, // 907
-1.975160357806438e-01, // 908
 7.851747593431241e-03, // 909
-1.337277203380824e-02, // 910
-5.386948755989135e+00, // 911
-1.009789222613320e-01, // 912
 1.445147635603047e-03, // 913
 1.387531219710128e-02, // 914
-1.185586577268993e-03, // 915
-4.722240791668424e-02, // 916
-4.678321280101585e-01, // 917
-1.206420971198487e+00, // 918
-6.373575296308464e-04, // 919
-2.505727444388436e-02, // 920
 2.954873405411071e-03, // 921
 3.902762339152746e-01, // 922
-1.066545803186842e-01, // 923
 2.890115390887783e-01, // 924
 4.244469529733346e-02, // 925
 4.435194317435437e-03, // 926
-1.188522746876660e+01, // 927
 1.344153257596424e-01, // 928
-2.353025010986859e-02, // 929
 2.926768362027083e-01, // 930
-4.037477548345599e-03, // 931
 4.077433366740460e-01, // 932
 1.107385209940406e+00, // 933
-2.147370147194884e+01, // 934
 3.455326888937749e-03, // 935
 3.615831248106881e-02, // 936
-2.747934987500730e-02, // 937
-2.157849138186149e+00, // 938
-3.751110986890507e-01, // 939
 3.568924796532647e-03, // 940
 2.915778908363236e-02, // 941
 8.224963099823666e-01, // 942
 4.940270338905427e+00, // 943
 1.957676898125186e+00, // 944
-1.628801948250545e+01, // 945
-2.162153301586336e-03, // 946
-8.062560875021226e-01, // 947
 5.445293440842447e-02, // 948
-1.359437096665131e+00, // 949
 6.986917526341320e-04, // 950
 4.124253475678591e-01, // 951
-2.413981234056311e-02, // 952
 1.569286907782045e-02, // 953
-2.784366579769844e-01, // 954
-4.559972017048364e-02, // 955
 2.056700108787433e-03, // 956
-3.413778523224284e-02, // 957
-5.045267329169633e-01, // 958
-1.304184487617439e-02, // 959
-3.488419144799348e-02, // 960
 1.432983661704427e-03, // 961
-7.615624021660241e-03, // 962
 4.414195474790248e-03, // 963
 1.930540094389761e-02, // 964
 1.089000012207512e-01, // 965
 8.338651570538671e-03, // 966
 4.532024990759400e-05, // 967
 3.976483375077324e+00, // 968
-1.139526747969113e-03, // 969
 4.430923855101521e-02, // 970
-1.143162426511896e+02, // 971
 3.703303098073098e-02, // 972
 2.400240992777174e+01, // 973
-2.090464352008559e+01, // 974
 3.581641486019253e-03, // 975
-2.430226976866477e-01, // 976
-8.369610256649906e+00, // 977
 4.619277290994893e-01, // 978
-3.830026720862150e-02, // 979
-1.026561258375834e-02, // 980
-6.703228530753091e+01, // 981
 1.673863692501776e-01, // 982
-3.250170488793043e+00, // 983
-4.940338851597019e+00, // 984
-3.879898815171673e-02, // 985
 4.176427302793283e+00, // 986
 8.777961189491668e-02, // 987
 1.045685080922106e-03, // 988
-1.410612475917650e-01, // 989
-6.697944301370675e-01, // 990
-2.557752042348960e-03, // 991
 1.070732054312337e-01, // 992
-6.381364819858689e-01, // 993
 4.681845208916493e-02, // 994
-2.124179897992476e+00, // 995
 4.290494267249705e-04, // 996
-2.803445370395707e+00, // 997
-1.762133286417721e-03, // 998
-1.471942945195998e-01, // 999
-4.541035442957606e-03, // 1000
-1.687504574713829e+01, // 1001
-3.679888303083125e-01, // 1002
 3.035947995677273e+01, // 1003
-3.873346909046425e+00, // 1004
 2.162465841217898e+01, // 1005
 5.228555372967759e-02, // 1006
-1.063266692299904e-02, // 1007
-5.709751528982051e+00, // 1008
 2.185271174252384e+00, // 1009
 8.832527589243903e-02, // 1010
-7.498183467710566e-03, // 1011
-3.039307316626250e-03, // 1012
-8.794774930733650e-01, // 1013
-2.232913185451781e+00, // 1014
-7.336102814879147e-03, // 1015
 2.879193553823908e-01, // 1016
-6.071731180734296e-03, // 1017
-1.468822874039240e+01, // 1018
 1.027219479222846e-03, // 1019
 9.015014830468896e-01, // 1020
-1.386822639743438e-01, // 1021
 9.211490855899904e-01, // 1022
 3.650844325310770e-01, // 1023
 2.302785279593864e-01, // 1024
-1.688978167413312e-03, // 1025
 1.379396442716590e-01, // 1026
 2.737079810789822e+00, // 1027
 2.704868503019619e-02, // 1028
 4.339321263078177e-03, // 1029
 1.198679979506811e-02, // 1030
 8.516694146187630e+00, // 1031
 6.908857742974023e-03, // 1032
 4.529851430268395e-01, // 1033
 7.205482405922729e+00, // 1034
 5.815813769759073e-02, // 1035
 5.954674832041270e-01, // 1036
-2.090275640011986e-02, // 1037
-3.980164150142960e+00, // 1038
 1.382565432246343e+01, // 1039
 1.003736296814399e-03, // 1040
 2.185657260302784e-03, // 1041
 1.196517832807288e-02, // 1042
 2.609597119606745e-02, // 1043
-8.796850430213733e-02, // 1044
 6.013091775491463e-03, // 1045
-1.171718909481054e-02, // 1046
 1.321169077719419e-01, // 1047
-3.606705391058443e+00, // 1048
 4.739232423878556e-03, // 1049
 7.253162273581241e-01, // 1050
-2.822252249434357e-01, // 1051
-1.257000542384439e-03, // 1052
 6.380186364015496e-04, // 1053
 4.533487237588532e-02, // 1054
 2.067255528140726e-02, // 1055
-1.552695725834706e-01, // 1056
 1.635784261761977e-03, // 1057
 4.652170600083434e-01, // 1058
 7.136974315744429e-02, // 1059
 5.601293341052792e-02, // 1060
-8.617037983254887e-01, // 1061
-1.998001373236299e-02, // 1062
 8.548789411630450e-03, // 1063
-2.925942476002008e-03, // 1064
-2.531018057662784e-01, // 1065
 4.407691268058347e-02, // 1066
-1.641838252045272e-01, // 1067
-2.033914605742067e+00, // 1068
-5.588893118666982e-02, // 1069
-2.544032751572282e-04, // 1070
 4.011845095838008e-04, // 1071
-4.333074571810659e-03, // 1072
 5.103752172780391e-04, // 1073
-3.118957411863647e-01, // 1074
-3.643460421250412e-01, // 1075
 8.579851996318508e-01, // 1076
-1.708675179597726e-03, // 1077
-1.022461089417423e-01, // 1078
 2.880003645759173e-03, // 1079
-1.080780594064200e+01, // 1080
 6.291629961405575e-02, // 1081
-4.014006727397450e-03, // 1082
 2.327597932961149e-01, // 1083
-3.040411309832680e+00, // 1084
 3.870226914352206e+00, // 1085
-5.276921135618440e-03, // 1086
-1.562994254948196e-02, // 1087
-2.909498013576582e-01, // 1088
 1.300854233008732e-02, // 1089
 2.371505277627921e-03, // 1090
 3.538927317228775e+01, // 1091
-1.738903691224657e+00, // 1092
 3.272411088327627e-02, // 1093
-1.034110746303206e-02, // 1094
-6.268144048244390e+00, // 1095
-3.708223033621890e-01, // 1096
-4.605471853199991e-01, // 1097
 3.003952247723897e-02, // 1098
 7.535640958211427e-01, // 1099
 1.449363785933556e-01, // 1100
-3.198145770234280e+01, // 1101
 7.238165209193105e-02, // 1102
-4.571752980178633e-04, // 1103
-1.087014682264316e-04, // 1104
 1.305781852076855e-01, // 1105
-5.913926857335191e+00, // 1106
-6.785233673584841e-02, // 1107
-1.839172720027920e-03, // 1108
-4.119805005748965e+01, // 1109
-5.140591182619549e-02, // 1110
-8.134083470873070e-02, // 1111
-7.484377077342487e-03, // 1112
-2.176358040681251e-01, // 1113
 9.129184457183274e-01, // 1114
-3.069249442907114e-02, // 1115
 2.411631446526680e+00, // 1116
-1.421660883713877e+00, // 1117
-1.716950906157263e+00, // 1118
 3.143340384938381e-01, // 1119
 5.538770814478473e-04, // 1120
-2.016853867816432e+01, // 1121
-1.757737372509279e+00, // 1122
-5.348030082661497e-01, // 1123
 2.926205800948768e-01, // 1124
-4.008722186859864e-02, // 1125
 1.762790540268823e-03, // 1126
-3.569272381208507e-02, // 1127
-4.540533012682946e-02, // 1128
-2.253792799654746e-01, // 1129
 3.626906414966873e-02, // 1130
-6.229674296023692e-04, // 1131
-1.039922338586046e+01, // 1132
 3.404260345512673e+00, // 1133
 2.541627893469847e-01, // 1134
 8.216258450166090e-01, // 1135
 1.228147612352383e+01, // 1136
 1.468913895213862e-01, // 1137
-4.201746238135714e-02, // 1138
-2.695598878170452e-02, // 1139
 1.213358828438989e+00, // 1140
 1.885490434473785e+01, // 1141
 7.261673792803370e+00, // 1142
 2.020624683994219e+00, // 1143
 3.312089422497588e-02, // 1144
-1.826174212418197e+02, // 1145
-1.362597999083910e+00, // 1146
 3.831449594734188e+01, // 1147
 2.417338971383627e-01, // 1148
-5.690747688496415e-01, // 1149
 6.980593751015782e-03, // 1150
 1.360363364290176e+00, // 1151
 1.016394669621179e-02, // 1152
-2.547886844839041e-02, // 1153
-3.492477951322843e-01, // 1154
-4.010188533304857e+00, // 1155
-2.190862296646716e-01, // 1156
-2.203233896851418e-04, // 1157
 4.064831923475799e+00, // 1158
 1.364651022815236e-01, // 1159
 4.174978502119641e-01, // 1160
-7.272187354604932e-01, // 1161
-1.445894007158033e-02  // 1162
};

//----------------------------------------------------------------------------//

} // namespace

////////////////////////////////////////////////////////////////////////////////

namespace x2o {

//----------------------------------------------------------------------------//

const double x3b_v2x::r3i =  0.000000000000000e+00; // A
const double x3b_v2x::r3f =  4.500000000000000e+00; // A

const double x3b_v2x::kHH_intra = -2.254303257872797e+00; // A^(-1)
const double x3b_v2x::kOH_intra = -2.564771901404151e-01; // A^(-1)

const double x3b_v2x::kHH =  4.247920544074333e-01; // A^(-1)
const double x3b_v2x::kOH =  8.128985941165371e-01; // A^(-1)
const double x3b_v2x::kOO =  3.749457984616480e-02; // A^(-1)

const double x3b_v2x::dHH_intra =  1.690594510379166e+00; // A
const double x3b_v2x::dOH_intra = -2.999999868517452e+00; // A

const double x3b_v2x::dHH =  3.499031358429095e+00; // A
const double x3b_v2x::dOH =  4.854042963514281e+00; // A
const double x3b_v2x::dOO =  4.816312044947604e-08; // A

//----------------------------------------------------------------------------//

double x3b_v2x::f_switch(const double& r, double& g)
{
    if (r > r3f) {
        g = 0.0;
        return 0.0;
    } else if (r > r3i) {
        const double t1 = M_PI/(r3f - r3i);
        const double x = (r - r3i)*t1;
        g = - std::sin(x)*t1/2.0;
        return (1.0 + std::cos(x))/2.0;
    } else {
        g = 0.0;
        return 1.0;
    }
}

//----------------------------------------------------------------------------//

double x3b_v2x::eval(const double* w1,
                     const double* w2,
                     const double* w3)
{
    const double* Oa  = w1;
    const double* Ha1 = w1 + 3;
    const double* Ha2 = w1 + 6;

    const double* Ob  = w2;
    const double* Hb1 = w2 + 3;
    const double* Hb2 = w2 + 6;

    const double* Oc  = w3;
    const double* Hc1 = w3 + 3;
    const double* Hc2 = w3 + 6;

    // Determine if the trimer is within cutoffs

    double rab[3], rac[3], rbc[3];
    double drab(0), drac(0), drbc(0);

    for (int n = 0; n < 3; ++n) {
        rab[n] = Oa[n] - Ob[n];
        drab += rab[n]*rab[n];

        rac[n] = Oa[n] - Oc[n];
        drac += rac[n]*rac[n];

        rbc[n] = Ob[n] - Oc[n];
        drbc += rbc[n]*rbc[n];
    }

    drab = std::sqrt(drab);
    drac = std::sqrt(drac);
    drbc = std::sqrt(drbc);

    if((drab > r3f) && (drac > r3f) && (drbc > r3f))
	return 0.0;

    double gab, gac, gbc;

    const double sab = f_switch(drab, gab);
    const double sac = f_switch(drac, gac);
    const double sbc = f_switch(drbc, gbc);

    const double s = sab*sac + sab*sbc + sac*sbc;

    // Begin polynomial evaluation

    double x[36];

    x[0] = var(kHH_intra, dHH_intra, Ha1, Ha2);
    x[1] = var(kHH_intra, dHH_intra, Hb1, Hb2);
    x[2] = var(kHH_intra, dHH_intra, Hc1, Hc2);
    x[3] = var(kOH_intra, dOH_intra,  Oa, Ha1);
    x[4] = var(kOH_intra, dOH_intra,  Oa, Ha2);
    x[5] = var(kOH_intra, dOH_intra,  Ob, Hb1);
    x[6] = var(kOH_intra, dOH_intra,  Ob, Hb2);
    x[7] = var(kOH_intra, dOH_intra,  Oc, Hc1);
    x[8] = var(kOH_intra, dOH_intra,  Oc, Hc2);

    x[9] =  var(kHH, dHH, Ha1, Hb1);
    x[10] = var(kHH, dHH, Ha1, Hb2);
    x[11] = var(kHH, dHH, Ha1, Hc1);
    x[12] = var(kHH, dHH, Ha1, Hc2);
    x[13] = var(kHH, dHH, Ha2, Hb1);
    x[14] = var(kHH, dHH, Ha2, Hb2);
    x[15] = var(kHH, dHH, Ha2, Hc1);
    x[16] = var(kHH, dHH, Ha2, Hc2);
    x[17] = var(kHH, dHH, Hb1, Hc1);
    x[18] = var(kHH, dHH, Hb1, Hc2);
    x[19] = var(kHH, dHH, Hb2, Hc1);
    x[20] = var(kHH, dHH, Hb2, Hc2);
    x[21] = var(kOH, dOH,  Oa, Hb1);
    x[22] = var(kOH, dOH,  Oa, Hb2);
    x[23] = var(kOH, dOH,  Oa, Hc1);
    x[24] = var(kOH, dOH,  Oa, Hc2);
    x[25] = var(kOH, dOH,  Ob, Ha1);
    x[26] = var(kOH, dOH,  Ob, Ha2);
    x[27] = var(kOH, dOH,  Ob, Hc1);
    x[28] = var(kOH, dOH,  Ob, Hc2);
    x[29] = var(kOH, dOH,  Oc, Ha1);
    x[30] = var(kOH, dOH,  Oc, Ha2);
    x[31] = var(kOH, dOH,  Oc, Hb1);
    x[32] = var(kOH, dOH,  Oc, Hb2);
    x[33] = var(kOO, dOO,  Oa,  Ob);
    x[34] = var(kOO, dOO,  Oa,  Oc);
    x[35] = var(kOO, dOO,  Ob,  Oc);

    double retval = poly_3b_v2x::eval(thefit, x);

    return s*retval;
}

//----------------------------------------------------------------------------//

double x3b_v2x::eval(const double* w1,
                     const double* w2,
                     const double* w3,
                     double* g1,
                     double* g2,
                     double* g3)
{
    const double* Oa  = w1;
    const double* Ha1 = w1 + 3;
    const double* Ha2 = w1 + 6;

    const double* Ob  = w2;
    const double* Hb1 = w2 + 3;
    const double* Hb2 = w2 + 6;

    const double* Oc  = w3;
    const double* Hc1 = w3 + 3;
    const double* Hc2 = w3 + 6;

    // Determine if the trimer is within cutoffs

    double rab[3], rac[3], rbc[3];
    double drab(0), drac(0), drbc(0);

    for (int n = 0; n < 3; ++n) {
        rab[n] = Oa[n] - Ob[n];
        drab += rab[n]*rab[n];

        rac[n] = Oa[n] - Oc[n];
        drac += rac[n]*rac[n];

        rbc[n] = Ob[n] - Oc[n];
        drbc += rbc[n]*rbc[n];
    }

    drab = std::sqrt(drab);
    drac = std::sqrt(drac);
    drbc = std::sqrt(drbc);

    if((drab > r3f) && (drac > r3f) && (drbc > r3f))
	return 0.0;

    double gab, gac, gbc;

    const double sab = f_switch(drab, gab);
    const double sac = f_switch(drac, gac);
    const double sbc = f_switch(drbc, gbc);

    const double s = sab*sac + sab*sbc + sac*sbc;

    // Begin polynomial evaluation

    double x[36];

    x[0] = var(kHH_intra, dHH_intra, Ha1, Ha2);
    x[1] = var(kHH_intra, dHH_intra, Hb1, Hb2);
    x[2] = var(kHH_intra, dHH_intra, Hc1, Hc2);
    x[3] = var(kOH_intra, dOH_intra,  Oa, Ha1);
    x[4] = var(kOH_intra, dOH_intra,  Oa, Ha2);
    x[5] = var(kOH_intra, dOH_intra,  Ob, Hb1);
    x[6] = var(kOH_intra, dOH_intra,  Ob, Hb2);
    x[7] = var(kOH_intra, dOH_intra,  Oc, Hc1);
    x[8] = var(kOH_intra, dOH_intra,  Oc, Hc2);

    x[9] =  var(kHH, dHH, Ha1, Hb1);
    x[10] = var(kHH, dHH, Ha1, Hb2);
    x[11] = var(kHH, dHH, Ha1, Hc1);
    x[12] = var(kHH, dHH, Ha1, Hc2);
    x[13] = var(kHH, dHH, Ha2, Hb1);
    x[14] = var(kHH, dHH, Ha2, Hb2);
    x[15] = var(kHH, dHH, Ha2, Hc1);
    x[16] = var(kHH, dHH, Ha2, Hc2);
    x[17] = var(kHH, dHH, Hb1, Hc1);
    x[18] = var(kHH, dHH, Hb1, Hc2);
    x[19] = var(kHH, dHH, Hb2, Hc1);
    x[20] = var(kHH, dHH, Hb2, Hc2);
    x[21] = var(kOH, dOH,  Oa, Hb1);
    x[22] = var(kOH, dOH,  Oa, Hb2);
    x[23] = var(kOH, dOH,  Oa, Hc1);
    x[24] = var(kOH, dOH,  Oa, Hc2);
    x[25] = var(kOH, dOH,  Ob, Ha1);
    x[26] = var(kOH, dOH,  Ob, Ha2);
    x[27] = var(kOH, dOH,  Ob, Hc1);
    x[28] = var(kOH, dOH,  Ob, Hc2);
    x[29] = var(kOH, dOH,  Oc, Ha1);
    x[30] = var(kOH, dOH,  Oc, Ha2);
    x[31] = var(kOH, dOH,  Oc, Hb1);
    x[32] = var(kOH, dOH,  Oc, Hb2);
    x[33] = var(kOO, dOO,  Oa,  Ob);
    x[34] = var(kOO, dOO,  Oa,  Oc);
    x[35] = var(kOO, dOO,  Ob,  Oc);

    double g[36];
    double retval = poly_3b_v2x::eval(thefit, x, g);

    for (int n = 0; n < 36; ++n)
        g[n] *= s;

    double* gOa  = g1;
    double* gHa1 = g1 + 3;
    double* gHa2 = g1 + 6;

    double* gOb  = g2;
    double* gHb1 = g2 + 3;
    double* gHb2 = g2 + 6;

    double* gOc  = g3;
    double* gHc1 = g3 + 3;
    double* gHc2 = g3 + 6;

    g_var(g[0], kHH_intra, dHH_intra, Ha1, Ha2, gHa1, gHa2);
    g_var(g[1], kHH_intra, dHH_intra, Hb1, Hb2, gHb1, gHb2);
    g_var(g[2], kHH_intra, dHH_intra, Hc1, Hc2, gHc1, gHc2);
    g_var(g[3], kOH_intra, dOH_intra,  Oa, Ha1,  gOa, gHa1);
    g_var(g[4], kOH_intra, dOH_intra,  Oa, Ha2,  gOa, gHa2);
    g_var(g[5], kOH_intra, dOH_intra,  Ob, Hb1,  gOb, gHb1);
    g_var(g[6], kOH_intra, dOH_intra,  Ob, Hb2,  gOb, gHb2);
    g_var(g[7], kOH_intra, dOH_intra,  Oc, Hc1,  gOc, gHc1);
    g_var(g[8], kOH_intra, dOH_intra,  Oc, Hc2,  gOc, gHc2);

    g_var(g[9],  kHH, dHH, Ha1, Hb1, gHa1, gHb1);
    g_var(g[10], kHH, dHH, Ha1, Hb2, gHa1, gHb2);
    g_var(g[11], kHH, dHH, Ha1, Hc1, gHa1, gHc1);
    g_var(g[12], kHH, dHH, Ha1, Hc2, gHa1, gHc2);
    g_var(g[13], kHH, dHH, Ha2, Hb1, gHa2, gHb1);
    g_var(g[14], kHH, dHH, Ha2, Hb2, gHa2, gHb2);
    g_var(g[15], kHH, dHH, Ha2, Hc1, gHa2, gHc1);
    g_var(g[16], kHH, dHH, Ha2, Hc2, gHa2, gHc2);
    g_var(g[17], kHH, dHH, Hb1, Hc1, gHb1, gHc1);
    g_var(g[18], kHH, dHH, Hb1, Hc2, gHb1, gHc2);
    g_var(g[19], kHH, dHH, Hb2, Hc1, gHb2, gHc1);
    g_var(g[20], kHH, dHH, Hb2, Hc2, gHb2, gHc2);
    g_var(g[21], kOH, dOH,  Oa, Hb1,  gOa, gHb1);
    g_var(g[22], kOH, dOH,  Oa, Hb2,  gOa, gHb2);
    g_var(g[23], kOH, dOH,  Oa, Hc1,  gOa, gHc1);
    g_var(g[24], kOH, dOH,  Oa, Hc2,  gOa, gHc2);
    g_var(g[25], kOH, dOH,  Ob, Ha1,  gOb, gHa1);
    g_var(g[26], kOH, dOH,  Ob, Ha2,  gOb, gHa2);
    g_var(g[27], kOH, dOH,  Ob, Hc1,  gOb, gHc1);
    g_var(g[28], kOH, dOH,  Ob, Hc2,  gOb, gHc2);
    g_var(g[29], kOH, dOH,  Oc, Ha1,  gOc, gHa1);
    g_var(g[30], kOH, dOH,  Oc, Ha2,  gOc, gHa2);
    g_var(g[31], kOH, dOH,  Oc, Hb1,  gOc, gHb1);
    g_var(g[32], kOH, dOH,  Oc, Hb2,  gOc, gHb2);
    g_var(g[33], kOO, dOO,  Oa,  Ob,  gOa,  gOb);
    g_var(g[34], kOO, dOO,  Oa,  Oc,  gOa,  gOc);
    g_var(g[35], kOO, dOO,  Ob,  Oc,  gOb,  gOc);

    // gradients of the switching function

    gab *= (sac + sbc)*retval/drab;
    gac *= (sab + sbc)*retval/drac;
    gbc *= (sab + sac)*retval/drbc;

    retval *= s;

    for (int n = 0; n < 3; ++n) {
        gOa[n] += gab*rab[n] + gac*rac[n];
        gOb[n] += gbc*rbc[n] - gab*rab[n];
        gOc[n] -= gac*rac[n] + gbc*rbc[n];
    }

    return retval;
}

//----------------------------------------------------------------------------//

} // namespace x2o

////////////////////////////////////////////////////////////////////////////////
